{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "containerStackName": {
      "type": "string",
      "defaultValue": "device-management-toolkit"
    },
    "registry": {
      "type": "string",
      "defaultValue": "docker.io",
      "metadata": {
        "description": "Name of the Registry."
      }
    },
    "registryUsername": {
      "type": "securestring",
      "metadata": {
        "description": "Username for the registry"
      }
    },
    "registryPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the registry"
      }
    },
    "vaultToken": {
      "type": "securestring",
      "metadata": {
        "description": "Specifies the root token to use for Vault in DEV mode"
      }
    },
    "rpsImageName": {
      "defaultValue": "intel/oact-rps:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the RPS image to deploy from specified registry"
      }
    },
    "mpsImageName": {
      "defaultValue": "intel/oact-mps:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the MPS image to deploy from specified registry"
      }
    },
    "sampleWebUIImageName": {
      "defaultValue": "intel/oact-webui:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the Sample WebUI image to deploy from specified registry"
      }
    },
    "fqdn": {
      "type": "string",
      "metadata": {
        "description": "Name of the FQDN you wish to use to access this deployment (i.e. \"sample\" will result in an FQDN of sample.westus.azurecontainer.io)"
      }
    },
    "useAllowlist": {
      "defaultValue": "false",
      "type": "string",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Device Management Toolkit documentation on https://device-management-toolkit.github.io/docs/"
      }
    },
    "dbAdminUsername": {
      "type": "securestring",
      "defaultValue": "postgresadmin",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Device Management Toolkit documentation on https://device-management-toolkit.github.io/docs/"
      }
    },
    "dbAdminPassword": {
      "type": "securestring",
      "defaultValue": "admin123",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Device Management Toolkit documentation on https://device-management-toolkit.github.io/docs/"
      }
    },
    "mpsAdminUsername": {
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Device Management Toolkit documentation on https://device-management-toolkit.github.io/docs/"
      }
    },
    "mpsAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Device Management Toolkit documentation on https://device-management-toolkit.github.io/docs/"
      }
    },
    "tokenExpiration": {
      "defaultValue": "1440",
      "type": "string",
      "metadata": {
        "description": "Specifies the duration (in minutes) that a token will be valid for"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2019-12-01",
      "name": "[parameters('containerStackName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": "Standard",
        "containers": [
          {
            "name": "rps",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('rpsImageName'))]",
              "ports": [
                {
                  "port": 8080
                },
                {
                  "port": 8081
                }
              ],
              "environmentVariables": [
                {
                  "name": "RPS_VAULT_TOKEN",
                  "value": "[parameters('vaultToken')]"
                },
                {
                  "name": "RPS_CONNECTION_STRING",
                  "value": "[concat('postgresql://',parameters('dbAdminUsername'),':',parameters('dbAdminPassword'),'@localhost:5432/rpsdb')]"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "mps",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('mpsImageName'))]",
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              },
              "environmentVariables": [
                {
                  "name": "MPS_COMMON_NAME",
                  "value": "[concat(parameters('fqdn'), '.', parameters('location'),'.azurecontainer.io')]"
                },
                {
                  "name": "MPS_WEB_ADMIN_USER",
                  "value": "[parameters('mpsAdminUsername')]"
                },
                {
                  "name": "MPS_WEB_ADMIN_PASSWORD",
                  "value": "[parameters('mpsAdminPassword')]"
                },
                {
                  "name": "MPS_JWT_EXPIRATION",
                  "value": "[parameters('tokenExpiration')]"
                },
                {
                  "name": "MPS_JWT_SECRET",
                  "value": "supersecret"
                },
                {
                  "name": "MPS_VAULT_TOKEN",
                  "value": "[parameters('vaultToken')]"
                },
                {
                  "name": "MPS_CONNECTION_STRING",
                  "value": "[concat('postgresql://',parameters('dbAdminUsername'),':',parameters('dbAdminPassword'),'@localhost:5432/mpsdb')]"
                }
              ],
              "ports": [
                {
                  "port": 4433
                },
                {
                  "port": 3000
                }
              ]
            }
          },
          {
            "name": "webui",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('sampleWebUIImageName'))]",
              "ports": [
                {
                  "port": 80
                }
              ],
              "environmentVariables": [
                {
                  "name": "MPS_SERVER",
                  "value": "[concat('https://',parameters('fqdn'), '.', parameters('location'), '.azurecontainer.io:8443/mps')]"
                },
                {
                  "name": "RPS_SERVER",
                  "value": "[concat('https://',parameters('fqdn'), '.', parameters('location'), '.azurecontainer.io:8443/rps')]"
                }
              ],
              "volumeMounts": [
                {
                  "name": "nginx-config",
                  "mountPath": "/etc/nginx/conf.d"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "vault",
            "properties": {
              "image": "hashicorp/vault:latest",
              "environmentVariables": [
                {
                  "name": "VAULT_DEV_ROOT_TOKEN_ID",
                  "value": "[parameters('vaultToken')]"
                },
                {
                  "name": "VAULT_DEV_LISTEN_ADDRESS",
                  "value": "0.0.0.0:8200"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "kong",
            "properties": {
              "image": "kong:2.3",
              "ports": [
                {
                  "port": 8443
                }
              ],
              "command": [
                "kong",
                "start",
                "--vv"
              ],
              "environmentVariables": [
                {
                  "name": "KONG_DATABASE",
                  "value": "off"
                },
                {
                  "name": "KONG_CASSANDRA_CONTACT_POINTS",
                  "value": "kong-database"
                },
                {
                  "name": "KONG_ADMIN_LISTEN",
                  "value": "0.0.0.0:8001"
                },
                {
                  "name": "KONG_ADMIN_LISTEN_SSL",
                  "value": "0.0.0.0:8444"
                },
                {
                  "name": "KONG_NGINX_DAEMON",
                  "value": "off"
                },
                {
                  "name": "KONG_DECLARATIVE_CONFIG",
                  "value": "/home/kong/kong.yaml"
                },
                {
                  "name": "KONG_LOG_LEVEL",
                  "value": "debug"
                }
              ],
              "volumeMounts": [
                {
                  "name": "kong-config",
                  "mountPath": "/home/kong/"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "db",
            "properties": {
              "image": "postgres:17",
              "ports": [
                {
                  "port": 5432
                }
              ],
              "environmentVariables": [
                {
                  "name": "POSTGRES_DB",
                  "value": "rpsdb"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "postgresadmin"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "value": "admin123"
                }
              ],
              "volumeMounts": [
                {
                  "name": "db-config",
                  "mountPath": "/docker-entrypoint-initdb.d"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "OnFailure",
        "imageRegistryCredentials": [
          {
            "server": "[parameters('registry')]",
            "username": "[parameters('registryUsername')]",
            "password": "[parameters('registryPassword')]"
          }
        ],
        "ipAddress": {
          "dnsNameLabel": "[parameters('fqdn')]",
          "type": "Public",
          "ports": [
            {
              "protocol": "tcp",
              "port": 4433
            },
            {
              "protocol": "tcp",
              "port": 8443
            }
          ]
        },
        "volumes": [
          {
            "name": "db-config",
            "secret": {
              "init.sql": "Q1JFQVRFIEVYVEVOU0lPTiBJRiBOT1QgRVhJU1RTIGNpdGV4dDsKQ1JFQVRFIFVTRVIgcnBzZGI7CkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIGNpcmFjb25maWdzKAogIGNpcmFfY29uZmlnX25hbWUgY2l0ZXh0IE5PVCBOVUxMLAogIG1wc19zZXJ2ZXJfYWRkcmVzcyB2YXJjaGFyKDI1NiksCiAgbXBzX3BvcnQgaW50ZWdlciwKICB1c2VyX25hbWUgdmFyY2hhcig0MCksCiAgcGFzc3dvcmQgdmFyY2hhcig2MyksCiAgY29tbW9uX25hbWUgdmFyY2hhcigyNTYpLAogIHNlcnZlcl9hZGRyZXNzX2Zvcm1hdCBpbnRlZ2VyLAogIGF1dGhfbWV0aG9kIGludGVnZXIsCiAgbXBzX3Jvb3RfY2VydGlmaWNhdGUgdGV4dCwKICBwcm94eWRldGFpbHMgdGV4dCwKICB0ZW5hbnRfaWQgdmFyY2hhcigzNikgTk9UIE5VTEwsCiAgUFJJTUFSWSBLRVkgKGNpcmFfY29uZmlnX25hbWUsIHRlbmFudF9pZCkKKTsKQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgaWVlZTgwMjF4Y29uZmlncygKICAgIHByb2ZpbGVfbmFtZSBjaXRleHQsCiAgICBhdXRoX3Byb3RvY29sIGludGVnZXIsCiAgICBzZXJ2ZXJuYW1lIFZBUkNIQVIoMjU1KSwKICAgIGRvbWFpbiBWQVJDSEFSKDI1NSksCiAgICB1c2VybmFtZSBWQVJDSEFSKDI1NSksCiAgICBwYXNzd29yZCBWQVJDSEFSKDI1NSksCiAgICByb2FtaW5nX2lkZW50aXR5IFZBUkNIQVIoMjU1KSwKICAgIGFjdGl2ZV9pbl9zMCBCT09MRUFOLAogICAgcHhlX3RpbWVvdXQgaW50ZWdlciwKICAgIHdpcmVkX2ludGVyZmFjZSBCT09MRUFOIE5PVCBOVUxMLAogICAgdGVuYW50X2lkIHZhcmNoYXIoMzYpIE5PVCBOVUxMLAogICAgUFJJTUFSWSBLRVkgKHByb2ZpbGVfbmFtZSwgdGVuYW50X2lkKQopOwpDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyB3aXJlbGVzc2NvbmZpZ3MoCiAgd2lyZWxlc3NfcHJvZmlsZV9uYW1lIGNpdGV4dCBOT1QgTlVMTCwKICBhdXRoZW50aWNhdGlvbl9tZXRob2QgaW50ZWdlciwKICBlbmNyeXB0aW9uX21ldGhvZCBpbnRlZ2VyLAogIHNzaWQgdmFyY2hhcigzMiksCiAgcHNrX3ZhbHVlIGludGVnZXIsCiAgcHNrX3Bhc3NwaHJhc2UgdmFyY2hhcig2MyksCiAgbGlua19wb2xpY3kgaW50W10sCiAgY3JlYXRpb25fZGF0ZSB0aW1lc3RhbXAsCiAgY3JlYXRlZF9ieSB2YXJjaGFyKDQwKSwKICB0ZW5hbnRfaWQgdmFyY2hhcigzNikgTk9UIE5VTEwsCiAgaWVlZTgwMjF4X3Byb2ZpbGVfbmFtZSBjaXRleHQsCiAgRk9SRUlHTiBLRVkgKGllZWU4MDIxeF9wcm9maWxlX25hbWUsdGVuYW50X2lkKSAgUkVGRVJFTkNFUyBpZWVlODAyMXhjb25maWdzKHByb2ZpbGVfbmFtZSx0ZW5hbnRfaWQpLAogIFBSSU1BUlkgS0VZICh3aXJlbGVzc19wcm9maWxlX25hbWUsIHRlbmFudF9pZCkKKTsKQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgcHJvZmlsZXMoCiAgcHJvZmlsZV9uYW1lIGNpdGV4dCBOT1QgTlVMTCwKICBhY3RpdmF0aW9uIHZhcmNoYXIoMjApIE5PVCBOVUxMLAogIGFtdF9wYXNzd29yZCB2YXJjaGFyKDQwKSwKICBnZW5lcmF0ZV9yYW5kb21fcGFzc3dvcmQgQk9PTEVBTiBOT1QgTlVMTCwKICBjaXJhX2NvbmZpZ19uYW1lIGNpdGV4dCwKICBGT1JFSUdOIEtFWSAoY2lyYV9jb25maWdfbmFtZSx0ZW5hbnRfaWQpICBSRUZFUkVOQ0VTIGNpcmFjb25maWdzKGNpcmFfY29uZmlnX25hbWUsdGVuYW50X2lkKSwKICBjcmVhdGlvbl9kYXRlIHRpbWVzdGFtcCwKICBjcmVhdGVkX2J5IHZhcmNoYXIoNDApLAogIG1lYnhfcGFzc3dvcmQgdmFyY2hhcig0MCksCiAgZ2VuZXJhdGVfcmFuZG9tX21lYnhfcGFzc3dvcmQgQk9PTEVBTiBOT1QgTlVMTCwKICB0YWdzIHRleHRbXSwKICBkaGNwX2VuYWJsZWQgQk9PTEVBTiwKICBpcF9zeW5jX2VuYWJsZWQgQk9PTEVBTiBOVUxMLAogIGxvY2FsX3dpZmlfc3luY19lbmFibGVkIEJPT0xFQU4gTlVMTCwKICB0ZW5hbnRfaWQgdmFyY2hhcigzNikgTk9UIE5VTEwsCiAgdGxzX21vZGUgaW50ZWdlciBOVUxMLAogIHVzZXJfY29uc2VudCB2YXJjaGFyKDcpIE5VTEwsCiAgaWRlcl9lbmFibGVkIEJPT0xFQU4gTlVMTCwKICBrdm1fZW5hYmxlZCBCT09MRUFOIE5VTEwsCiAgc29sX2VuYWJsZWQgQk9PTEVBTiBOVUxMLAogIHRsc19zaWduaW5nX2F1dGhvcml0eSB2YXJjaGFyKDQwKSBOVUxMLAogIGllZWU4MDIxeF9wcm9maWxlX25hbWUgY2l0ZXh0LAogIEZPUkVJR04gS0VZIChpZWVlODAyMXhfcHJvZmlsZV9uYW1lLHRlbmFudF9pZCkgIFJFRkVSRU5DRVMgaWVlZTgwMjF4Y29uZmlncyhwcm9maWxlX25hbWUsdGVuYW50X2lkKSwKICBQUklNQVJZIEtFWSAocHJvZmlsZV9uYW1lLCB0ZW5hbnRfaWQpCik7CkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHByb2ZpbGVzX3dpcmVsZXNzY29uZmlncygKICB3aXJlbGVzc19wcm9maWxlX25hbWUgY2l0ZXh0LAogIHByb2ZpbGVfbmFtZSBjaXRleHQsCiAgRk9SRUlHTiBLRVkgKHdpcmVsZXNzX3Byb2ZpbGVfbmFtZSx0ZW5hbnRfaWQpICBSRUZFUkVOQ0VTIHdpcmVsZXNzY29uZmlncyh3aXJlbGVzc19wcm9maWxlX25hbWUsdGVuYW50X2lkKSwKICBGT1JFSUdOIEtFWSAocHJvZmlsZV9uYW1lLHRlbmFudF9pZCkgIFJFRkVSRU5DRVMgcHJvZmlsZXMocHJvZmlsZV9uYW1lLHRlbmFudF9pZCksCiAgcHJpb3JpdHkgaW50ZWdlciwKICBjcmVhdGlvbl9kYXRlIHRpbWVzdGFtcCwKICBjcmVhdGVkX2J5IHZhcmNoYXIoNDApLAogIHRlbmFudF9pZCB2YXJjaGFyKDM2KSBOT1QgTlVMTCwKICBQUklNQVJZIEtFWSAod2lyZWxlc3NfcHJvZmlsZV9uYW1lLCBwcm9maWxlX25hbWUsIHByaW9yaXR5LCB0ZW5hbnRfaWQpCik7CkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIGRvbWFpbnMoCiAgbmFtZSBjaXRleHQgTk9UIE5VTEwsCiAgZG9tYWluX3N1ZmZpeCBjaXRleHQgTk9UIE5VTEwsCiAgcHJvdmlzaW9uaW5nX2NlcnQgdGV4dCwKICBwcm92aXNpb25pbmdfY2VydF9zdG9yYWdlX2Zvcm1hdCB2YXJjaGFyKDQwKSwKICBwcm92aXNpb25pbmdfY2VydF9rZXkgdGV4dCwKICBjcmVhdGlvbl9kYXRlIHRpbWVzdGFtcCwKICBleHBpcmF0aW9uX2RhdGUgdGltZXN0YW1wLAogIGNyZWF0ZWRfYnkgdmFyY2hhcig0MCksCiAgdGVuYW50X2lkIHZhcmNoYXIoMzYpIE5PVCBOVUxMLAogIENPTlNUUkFJTlQgZG9tYWlubmFtZSBVTklRVUUgKG5hbWUsIHRlbmFudF9pZCksCiAgQ09OU1RSQUlOVCBkb21haW5zdWZmaXggVU5JUVVFIChkb21haW5fc3VmZml4LCB0ZW5hbnRfaWQpLAogIFBSSU1BUlkgS0VZIChuYW1lLCBkb21haW5fc3VmZml4LCB0ZW5hbnRfaWQpCik7CkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHByb3h5Y29uZmlncygKICBwcm94eV9jb25maWdfbmFtZSBjaXRleHQsCiAgYWRkcmVzcyBjaXRleHQgTk9UIE5VTEwsCiAgaW5mb19mb3JtYXQgaW50ZWdlciBOT1QgTlVMTCwKICBwb3J0IGludGVnZXIgTk9UIE5VTEwsCiAgbmV0d29ya19kbnNfc3VmZml4IHZhcmNoYXIoMTkyKSwKICBjcmVhdGlvbl9kYXRlIHRpbWVzdGFtcCwKICB0ZW5hbnRfaWQgdmFyY2hhcigzNiksCiAgQ09OU1RSQUlOVCBhZGRyZXNzX3BvcnRfdGVuYW50X2lkIFVOSVFVRSAoYWRkcmVzcywgcG9ydCwgdGVuYW50X2lkKSwKICBQUklNQVJZIEtFWSAocHJveHlfY29uZmlnX25hbWUsIHRlbmFudF9pZCkKKTsKQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgcHJvZmlsZXNfcHJveHljb25maWdzKAogIHByb3h5X2NvbmZpZ19uYW1lIGNpdGV4dCwKICBwcm9maWxlX25hbWUgY2l0ZXh0LAogIEZPUkVJR04gS0VZIChwcm94eV9jb25maWdfbmFtZSx0ZW5hbnRfaWQpICBSRUZFUkVOQ0VTIHByb3h5Y29uZmlncyhwcm94eV9jb25maWdfbmFtZSx0ZW5hbnRfaWQpLAogIEZPUkVJR04gS0VZIChwcm9maWxlX25hbWUsdGVuYW50X2lkKSAgUkVGRVJFTkNFUyBwcm9maWxlcyhwcm9maWxlX25hbWUsdGVuYW50X2lkKSwKICBwcmlvcml0eSBpbnRlZ2VyLAogIGNyZWF0aW9uX2RhdGUgdGltZXN0YW1wLAogIGNyZWF0ZWRfYnkgdmFyY2hhcig0MCksCiAgdGVuYW50X2lkIHZhcmNoYXIoMzYpLAogIFBSSU1BUlkgS0VZIChwcm94eV9jb25maWdfbmFtZSwgcHJvZmlsZV9uYW1lLCBwcmlvcml0eSwgdGVuYW50X2lkKQopOwoKQ1JFQVRFIERBVEFCQVNFIG1wc2RiOwoKXGNvbm5lY3QgbXBzZGIKCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIGRldmljZXMoCiAgICAgIGd1aWQgdXVpZCBOT1QgTlVMTCwKICAgICAgdGFncyB0ZXh0W10sCiAgICAgIGhvc3RuYW1lIHZhcmNoYXIoMjU2KSwKICAgICAgbXBzaW5zdGFuY2UgdGV4dCwgCiAgICAgIGNvbm5lY3Rpb25zdGF0dXMgYm9vbGVhbiwKICAgICAgbXBzdXNlcm5hbWUgdGV4dCwKICAgICAgdGVuYW50aWQgdmFyY2hhcigzNikgTk9UIE5VTEwsCiAgICAgIGZyaWVuZGx5bmFtZSB2YXJjaGFyKDI1NiksCiAgICAgIGRuc3N1ZmZpeCB2YXJjaGFyKDI1NiksCiAgICAgIGxhc3Rjb25uZWN0ZWQgdGltZXN0YW1wIHdpdGggdGltZSB6b25lLAogICAgICBsYXN0c2VlbiB0aW1lc3RhbXAgd2l0aCB0aW1lIHpvbmUsCiAgICAgIGxhc3RkaXNjb25uZWN0ZWQgdGltZXN0YW1wIHdpdGggdGltZSB6b25lLAogICAgICBkZXZpY2VpbmZvIEpTT04sCiAgICAgIENPTlNUUkFJTlQgZGV2aWNlX2d1aWQgVU5JUVVFKGd1aWQpLAogICAgICBQUklNQVJZIEtFWSAoZ3VpZCx0ZW5hbnRpZCkKICAgICk7"
            }
          },
          {
            "name": "nginx-config",
            "secret": {
              "nginx.conf": "c2VydmVyIHsNCiAgICBsaXN0ZW4gODAgZGVmYXVsdF9zZXJ2ZXI7DQogICAgbGlzdGVuIFs6Ol06ODAgZGVmYXVsdF9zZXJ2ZXI7DQogICAgc2VydmVyX25hbWUgXzsNCiANCg0KICAgIGxvY2F0aW9uIC8gew0KICAgICAgICByb290ICAgL3Vzci9zaGFyZS9uZ2lueC9odG1sOw0KICAgICAgICBpbmRleCAgaW5kZXguaHRtbCBpbmRleC5odG07DQogICAgfQ0KDQogICAgZXJyb3JfcGFnZSAgNDA0ICAgICAgICAgICAgICAvaW5kZXguaHRtbDsNCg0KICAgICMgcmVkaXJlY3Qgc2VydmVyIGVycm9yIHBhZ2VzIHRvIHRoZSBzdGF0aWMgcGFnZSAvNTB4Lmh0bWwNCiAgICAjDQogICAgZXJyb3JfcGFnZSAgIDUwMCA1MDIgNTAzIDUwNCAgLzUweC5odG1sOw0KICAgIGxvY2F0aW9uID0gLzUweC5odG1sIHsNCiAgICAgICAgcm9vdCAgIC91c3Ivc2hhcmUvbmdpbngvaHRtbDsNCiAgICB9DQp9DQoNCg=="
            }
          },
          {
            "name": "kong-config",
            "secret": {
              "kong.yaml": "X2Zvcm1hdF92ZXJzaW9uOiAiMi4xIgpfdHJhbnNmb3JtOiB0cnVlCgpzZXJ2aWNlczoKLSBuYW1lOiBtcHMtcmVzdAogIGhvc3Q6IDEyNy4wLjAuMQogIHBvcnQ6IDMwMDAKICB0YWdzOgogIC0gbXBzCiAgcm91dGVzOgogIC0gbmFtZTogbXBzLXJvdXRlCiAgICBzdHJpcF9wYXRoOiB0cnVlCiAgICBwYXRoczoKICAgIC0gL21wcwoKLSBuYW1lOiBtcHMtcmVzdC12MgogIGhvc3Q6IDEyNy4wLjAuMQogIHBvcnQ6IDMwMDAKICBwYXRoOiAvYXBpL3YxL2F1dGhvcml6ZQogIHRhZ3M6CiAgLSBtcHMKICByb3V0ZXM6CiAgLSBuYW1lOiBtcHMtbG9naW4tcm91dGUKICAgIHN0cmlwX3BhdGg6IHRydWUKICAgIHBhdGhzOgogICAgLSAvbXBzL2xvZ2luL2FwaS92MS9hdXRob3JpemUKCi0gbmFtZTogbXBzLXJlZGlyZWN0aW9uCiAgaG9zdDogMTI3LjAuMC4xCiAgcG9ydDogMzAwMAogIHBhdGg6IC9yZWxheQogIHRhZ3M6CiAgLSBtcHMKICByb3V0ZXM6CiAgLSBuYW1lOiBtcHMtcmVkaXJlY3Rpb24tcm91dGUKICAgIHN0cmlwX3BhdGg6IHRydWUKICAgIHBhdGhzOgogICAgLSAvbXBzL3dzL3JlbGF5CgotIG5hbWU6IHJwcy1yZXN0CiAgaG9zdDogMTI3LjAuMC4xCiAgcG9ydDogODA4MSAgCiAgdGFnczoKICAtIHJwcwogIHJvdXRlczoKICAtIG5hbWU6IHJwcy1yb3V0ZQogICAgc3RyaXBfcGF0aDogdHJ1ZQogICAgcGF0aHM6CiAgICAtIC9ycHMKCi0gbmFtZTogcnBzLXdzCiAgaG9zdDogMTI3LjAuMC4xCiAgcG9ydDogODA4MAogIHRhZ3M6CiAgLSBycHMKICByb3V0ZXM6CiAgLSBuYW1lOiBycHMtYWN0aXZhdGUtcm91dGUKICAgIHN0cmlwX3BhdGg6IHRydWUKICAgIHBhdGhzOgogICAgLSAvYWN0aXZhdGUKICAtIG5hbWU6IHJwcy1kZWFjdGl2YXRlLXJvdXRlCiAgICBzdHJpcF9wYXRoOiB0cnVlCiAgICBwYXRoczoKICAgIC0gL2RlYWN0aXZhdGUKICAtIG5hbWU6IHJwcy1tYWludGVuYW5jZS1yb3V0ZQogICAgc3RyaXBfcGF0aDogdHJ1ZQogICAgcGF0aHM6CiAgICAtIC9tYWludGVuYW5jZQoKLSBuYW1lOiB2YXVsdC1hcGkKICBob3N0OiAxMjcuMC4wLjEKICBwb3J0OiA4MjAwIAogIHRhZ3M6CiAgLSB2YXVsdAogIHJvdXRlczoKICAtIG5hbWU6IHZhdWx0LXJvdXRlCiAgICBzdHJpcF9wYXRoOiB0cnVlCiAgICBwYXRoczoKICAgIC0gL3ZhdWx0CgotIG5hbWU6IG1vc3F1aXR0by13cwogIGhvc3Q6IDEyNy4wLjAuMQogIHBvcnQ6IDkwMDEKICB0YWdzOgogIC0gbW9zcXVpdHRvCiAgcm91dGVzOgogIC0gbmFtZTogbW9zcXVpdHRvLXJvdXRlCiAgICBzdHJpcF9wYXRoOiB0cnVlCiAgICBwYXRoczoKICAgIC0gL21vc3F1aXR0bwoKLSBuYW1lOiB3ZWIKICBob3N0OiAxMjcuMC4wLjEKICBwb3J0OiA4MAogIHRhZ3M6CiAgLSB3ZWIKICByb3V0ZXM6CiAgLSBuYW1lOiB3ZWItcm91dGUKICAgIHBhdGhzOgogICAgLSAvCgpwbHVnaW5zOgotIG5hbWU6IGNvcnMgCi0gbmFtZTogand0CiAgcm91dGU6IHJwcy1yb3V0ZQogIGNvbmZpZzoKICAgIGNsYWltc190b192ZXJpZnk6CiAgICAtIGV4cAotIG5hbWU6IGp3dAogIHJvdXRlOiBtcHMtcm91dGUKICBjb25maWc6CiAgICBjbGFpbXNfdG9fdmVyaWZ5OgogICAgLSBleHAKCmNvbnN1bWVyczoKICAtIHVzZXJuYW1lOiBhZG1pbgpqd3Rfc2VjcmV0czoKICAtIGNvbnN1bWVyOiBhZG1pbgogICAga2V5OiA5RW1SSlRiSWlJYjRiSWVTc21nY1dJanJSNkh5RVRxYyAjc2FtcGxlIGtleQogICAgc2VjcmV0OiAic3VwZXJzZWNyZXQiCg=="
            }
          },
          {
            "name": "private",
            "emptyDir": {}
          }
        ]
      }
    }
  ]
}
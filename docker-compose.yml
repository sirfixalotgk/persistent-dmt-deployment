#/*********************************************************************
# Copyright (c) Intel Corporation 2020
# SPDX-License-Identifier: Apache-2.0
#**********************************************************************/
name: open-amt-cloud-toolkit

services: 
  webui:
    restart: always
    image: intel/oact-webui:latest
    networks:
      - openamtnetwork
    build:
      context: ./sample-web-ui
      dockerfile: ./Dockerfile
    environment:
      RPS_SERVER: https://${MPS_COMMON_NAME}/rps
      MPS_SERVER: https://${MPS_COMMON_NAME}/mps
      VAULT_SERVER: https://${MPS_COMMON_NAME}/vault
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf  
  rps:
    restart: always
    image: intel/oact-rps:latest
    networks:
      - openamtnetwork
    build:
      context: ./rps
      dockerfile: ./Dockerfile
    env_file:
      - .env
    healthcheck:
      interval: 12s 
      timeout: 12s
      retries: 3 
      test: ["CMD", "node", "rps/dist/Healthcheck.js"]
    environment: 
      RPS_MPS_SERVER: http://mps:3000
      RPS_SECRETS_PATH: ${SECRETS_PATH}
      RPS_VAULT_TOKEN: ${VAULT_TOKEN}
      RPS_VAULT_ADDRESS: ${VAULT_ADDRESS}
      RPS_CONNECTION_STRING: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/rpsdb
      RPS_CONSUL_ENABLED: ${CONSUL_ENABLED}
      RPS_CONSUL_HOST: ${CONSUL_HOST}
      RPS_CONSUL_PORT: ${CONSUL_PORT}      
  mps:
    restart: always
    image: intel/oact-mps:latest
    networks:
      - openamtnetwork
    build:
      context: ./mps
      dockerfile: ./Dockerfile
    ports:
      - "${MPSPORT}:4433"
    env_file:
      - .env
    healthcheck:
      interval: 12s 
      timeout: 12s
      retries: 3 
      test: ["CMD", "node", "mps/dist/Healthcheck.js"]
    environment: 
      MPS_INSTANCE_NAME: '{{.Task.Name}}'
      MPS_SECRETS_PATH: ${SECRETS_PATH}
      MPS_VAULT_TOKEN: ${VAULT_TOKEN}
      MPS_VAULT_ADDRESS: ${VAULT_ADDRESS}
      MPS_CONNECTION_STRING: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/mpsdb
      MPS_CONSUL_ENABLED: ${CONSUL_ENABLED}
      MPS_CONSUL_HOST: ${CONSUL_HOST} 
      MPS_CONSUL_PORT: ${CONSUL_PORT}      
    volumes:
      - private-volume:/mps-microservice/private
  mpsrouter:
    restart: always
    image: intel/oact-mpsrouter:latest
    environment:
      MPS_CONNECTION_STRING: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/mpsdb?sslmode=disable
      PORT: ${PORT}
      MPS_PORT: ${MPSWEBPORT}
    healthcheck:
      interval: 12s 
      timeout: 12s
      retries: 3 
      test: ["CMD", "/app","--health"]
    build:
      context: ./mps-router
      dockerfile: ./Dockerfile
    networks:
      - openamtnetwork
  db:
    restart: always
    image: postgres:17
    build:
      context: ./pg
      dockerfile: ./Dockerfile
    # command: -c ssl=on -c ssl_cert_file=/var/lib/postgresql/server.crt -c ssl_key_file=/var/lib/postgresql/server.key
    networks:
      - openamtnetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rpsdb"]
      interval: 2s
      timeout: 3s
      retries: 30
    environment:
      POSTGRES_DB: rpsdb
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    volumes: 
      - ./data:/docker-entrypoint-initdb.d
  vault:
    restart: always
    image: hashicorp/vault
    networks:
      - openamtnetwork
    ports: 
      - 8200:8200
    environment: 
      VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_TOKEN}
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    cap_add: 
      - IPC_LOCK
  consul:
    restart: always
    image: hashicorp/consul
    networks:
      - openamtnetwork
    ports: 
      - 8500:8500
    profiles:
      - consul
    volumes: 
       - type: volume 
         source: consul-config 
         target: /consul/config 
         volume: {} 
       - type: volume 
         source: consul-data 
         target: /consul/data 
         volume: {}    
    command: "agent -server -ui -node=OACT-1 -bootstrap-expect=1 -client=0.0.0.0"
  kong:
    restart: always
    image: kong:3.1
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    command:
      - "kong"
      - "start"
      - "--vv"
    environment:
      - KONG_DATABASE=off
      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_ADMIN_LISTEN_SSL=0.0.0.0:8444
      - KONG_NGINX_DAEMON=off
      - KONG_DECLARATIVE_CONFIG=/home/kong/kong.yml
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_DNS_ORDER=LAST,A,CNAME
      - KONG_UPSTREAM_KEEPALIVE_POOL_SIZE=0
    networks:
      - openamtnetwork
    volumes:
      - ./kong.yaml:/home/kong/kong.yml
    ports:
      - 443:8443
      - 8001:8001
  mosquitto:
    restart: always
    image: eclipse-mosquitto
    ports:
      - 8883:8883
    volumes: 
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - openamtnetwork
    profiles:
      - "mqtt"
volumes:
    app-volume:
    private-volume:
    consul-config:
    consul-data:
networks: 
  openamtnetwork:
    driver: "bridge"
